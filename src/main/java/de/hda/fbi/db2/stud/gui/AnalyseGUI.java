package de.hda.fbi.db2.stud.gui;




import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

/**
 *
 * @author Sascha Bauer, Ahmad Mustain Billah
 *
 */

public class AnalyseGUI extends JFrame {
    private static AnalyseGUI instance = null;
    private JPanel panelMain;
    private JButton buttonAnalyse2;
    private JButton buttonAnalyse1;
    private JButton buttonAnalyse3;
    private JButton buttonAnalyse4;



    public AnalyseGUI() throws HeadlessException {
        super("Analyse GUI");
        setContentPane(panelMain);
        pack();
        setVisible(true);
        getMainFrame().setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        buttonAnalyse1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Analyse1 test = Analyse1.getInstance();
                test.setVisible(true);

                getMainFrame().dispose();
            }
        });
        buttonAnalyse2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Analyse2 test = Analyse2.getInstance();
                test.setVisible(true);

                getMainFrame().dispose();
            }
        });
        buttonAnalyse3.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Analyse3 test = Analyse3.getInstance();
                test.setVisible(true);

                getMainFrame().dispose();
            }
        });
        buttonAnalyse4.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Analyse4 test = Analyse4.getInstance();
                test.setVisible(true);

                getMainFrame().dispose();
            }
        });
    }

    public static AnalyseGUI getInstance() {
        if (instance == null) {
            instance = new AnalyseGUI();
        }

        return instance;
    }

    private JFrame getMainFrame() {
        return (JFrame) SwingUtilities.getWindowAncestor(this.panelMain);
    }
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        setupUI();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void setupUI() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        Font label1Font = this.getFont(null, -1, 20, label1.getFont());
        if (label1Font != null){
            label1.setFont(label1Font);
        }
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(0);
        label1.setText("Analyse der Spieldaten");
        panelMain.add(label1, new GridConstraints(0, 0, 1, 2,
                GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panelMain.add(spacer1, new GridConstraints(1, 1, 4, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL,
                1, GridConstraints.SIZEPOLICY_WANT_GROW,
                null, null, null, 0, false));
        buttonAnalyse2 = new JButton();
        buttonAnalyse2.setText("2.Analyse");
        panelMain.add(buttonAnalyse2, new GridConstraints(2, 0, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
        buttonAnalyse3 = new JButton();
        buttonAnalyse3.setText("3.Analyse");
        panelMain.add(buttonAnalyse3, new GridConstraints(3, 0, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
        buttonAnalyse4 = new JButton();
        buttonAnalyse4.setText("4.Analyse");
        panelMain.add(buttonAnalyse4, new GridConstraints(4, 0, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonAnalyse1 = new JButton();
        buttonAnalyse1.setText("1.Analyse");
        panelMain.add(buttonAnalyse1, new GridConstraints(1, 0, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font getFont(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) {
            return null;
        }
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style :
                currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent getRootComponent() {
        return panelMain;
    }
}
