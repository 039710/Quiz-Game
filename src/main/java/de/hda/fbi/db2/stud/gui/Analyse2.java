package de.hda.fbi.db2.stud.gui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import de.hda.fbi.db2.stud.entity.Gameinformation;

/**
 *
 * @author Sascha Bauer, Ahmad Mustain Billah
 *
 */

public class Analyse2 extends JFrame {
    private JPanel panelMain;
    private JTextField searchPlayerGamesTF;
    private JButton suchenButton;
    private JTable tableA2;
    private JButton zurueckButton;
    private static Analyse2 instance = null;
    private EntityManagerFactory emf = Persistence.createEntityManagerFactory("defaultMAIN");
    private EntityManager em = emf.createEntityManager();

    public Analyse2() {
        super("Analyse GUI");
        setContentPane(panelMain);
        pack();
        setVisible(true);
        getMainFrame().setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        suchenButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                List searchPlayerGames = em.createQuery("select g, p "
                        + "from Gameinformation g join g.players p "
                        + "where p.playerName = :playName")
                        .setParameter("playName", String.valueOf(searchPlayerGamesTF.getText()))
                        .getResultList();

                DefaultTableModel a2Model = new DefaultTableModel(
                        new Object[]{"ID", "Start Date", "End Date",
                                "Score", "Question Amounts"}, 0);
                String header[] = {"ID", "Start Date", "End Date",
                        "Score", "Question Amounts"};

                for (Iterator i = searchPlayerGames.iterator(); i.hasNext(); ) {
                    Object[] element = (Object[]) i.next();
                    Gameinformation gi = (Gameinformation) element[0];
                    a2Model.addRow(new Object[]
                            {gi.getGameId(), gi.getTimeStart(), gi.getTimeEnd(),
                                    gi.getScore(), gi.getQuestionAmount()});
                }
                for (int i = 0; i < tableA2.getColumnCount(); i++) {
                    TableColumn column1 = tableA2.getTableHeader().getColumnModel().getColumn(i);
                    column1.setHeaderValue(header[i]);
                }
                tableA2.setModel(a2Model);
            }
        });
        zurueckButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                AnalyseGUI test = AnalyseGUI.getInstance();
                test.setVisible(true);

                getMainFrame().dispose();
            }
        });
    }

    public static Analyse2 getInstance() {
        if (instance == null) {
            instance = new Analyse2();
        }

        return instance;
    }

    private JFrame getMainFrame() {
        return (JFrame) SwingUtilities.getWindowAncestor(this.panelMain);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        setupUI();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void setupUI() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Spielername");
        panelMain.add(label1, new GridConstraints(0, 0, 1, 1,
                GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panelMain.add(spacer1, new GridConstraints(1, 0, 2, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL,
                1, GridConstraints.SIZEPOLICY_WANT_GROW,
                null, null, null, 0, false));
        searchPlayerGamesTF = new JTextField();
        panelMain.add(searchPlayerGamesTF, new GridConstraints(0, 1, 1, 1,
                GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED,
                null, new Dimension(150, -1), null, 0, false));
        suchenButton = new JButton();
        suchenButton.setText("Suchen");
        panelMain.add(suchenButton, new GridConstraints(0, 2, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
        zurueckButton = new JButton();
        zurueckButton.setText("Zurueck");
        panelMain.add(zurueckButton, new GridConstraints(1, 2, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED,
                null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panelMain.add(scrollPane1, new GridConstraints(2, 1, 1, 1,
                GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_CAN_SHRINK |
                        GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tableA2 = new JTable();
        tableA2.setAutoCreateRowSorter(false);
        scrollPane1.setViewportView(tableA2);
    }

    /**
     * @noinspection ALL
     */
    public JComponent getRootComponent() {
        return panelMain;
    }
}
